#include <iostream>
#include <cmath>
#include <ctime>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <mpi.h>
#include <boost/array.hpp>
#include <boost/numeric/odeint.hpp>
#include <boost/random/mersenne_twister.hpp>
#include <boost/random/variate_generator.hpp>
#include <boost/random/uniform_real.hpp>

using namespace std;
using namespace boost::numeric::odeint;

// Target Final State Conditions
const double tof = 150.0;
const double pi = 4.0*atan(1.0);
const double theta_target = 0.0; // [rad]
const double dockLength = 0.4; // [m]
const double rotRate_target = 1.0; // [rpm]
const double angVel_target = rotRate_target*2.0*pi/60.0; // [rad/s]
const double r_target1 = dockLength*cos(angVel_target*tof + pi/2.0);
const double r_target2 = dockLength*sin(angVel_target*tof + pi/2.0); // [m]
const double rnorm = sqrt(r_target1*r_target1+r_target2*r_target2);
const double v_target1 = angVel_target*rnorm*cos(angVel_target*tof + pi);
const double v_target2 = angVel_target*rnorm*sin(angVel_target*tof + pi); 
//% [m/s]

// Hardcode waypoint time for now
const double tof_waypoint = 0.1*tof;

// define integrator and waypoint function domain types
typedef std::array<double,5> state_type;
typedef std::array<double,4> waypoint;


// declare waypoint variables used in cost function as global
// but don't fix their values
waypoint w_val;

// set up generators for random number functions
typedef boost::mt19937 generator_type;

// begin functions
// ********************************************************************

void ZEM_ZEV_prop_waypoint(const state_type &y, state_type &dydt,\
    const double t)
{
    double t_go1 = tof_waypoint - t;
    if (t_go1 < 1e-2) {
        t_go1 = 1e-2;
    }

    // double rr, r_p1, r_p2, v_p1, v_p2, zem1, zem2, zev1, zev2;
    // r_p1 = y[0] + t_go1*y[2]; 
    // r_p2 = y[1] + t_go1*y[3];
    // v_p1 = y[2]; 
    // v_p2 = y[3];

	
	double A_hat[4][4] = {
		{4-3*cos(0.0011*t_go1), 0, (1/0.0011)*sin(0.0011*t_go1), -(2/0.0011)*(cos(0.0011*t_go1)-1)},
		{6*sin(0.0011*t_go1)-6*0.0011*t_go1, 1, (2/0.0011)*(cos(0.0011*t_go1)-1), (4/0.0011)*sin(0.0011*t_go1)-3*t_go1},
		{3*0.0011*sin(0.0011*t_go1), 0, cos(0.0011*t_go1), 2*sin(0.0011*t_go1)},
		{6*0.0011*(cos(0.0011*t_go1)-1), 0, -2*sin(0.0011*t_go1), 4*cos(0.0011*t_go1)-3}
	};
    zem1 = w_val[0]-(A_hat[0][0]*y[0]+A_hat[0][1]*y[1]+A_hat[0][2]*y[2]+A_hat[0][3]*y[3]);
    zem2 = w_val[1]-(A_hat[1][0]*y[0]+A_hat[1][1]*y[1]+A_hat[1][2]*y[2]+A_hat[1][3]*y[3]);
    zev1 = w_val[2]-(A_hat[2][0]*y[0]+A_hat[2][1]*y[1]+A_hat[2][2]*y[2]+A_hat[2][3]*y[3]);
    zev2 = w_val[3]-(A_hat[3][0]*y[0]+A_hat[3][1]*y[1]+A_hat[3][2]*y[2]+A_hat[3][3]*y[3]);
	
	// B_hat[4][4] = {
		// {((13*sin(0.0011*t_go1))/2 - 0.0011*(4*t_go1 + (5*t_go1*cos(0.0011*t_go1))/2))/0.0011^3,    -(3*0.0011^2*t_go1^2 - 32*sin((0.0011*t_go1)/2)^2 + 5*0.0011*t_go1*sin(0.0011*t_go1))/0.0011^3,(16*sin((0.0011*t_go1)/2)^2 - 5*0.0011*t_go1*sin(0.0011*t_go1))/(2*0.0011^2),            (6*t_go1 + 5*t_go1*cos(0.0011*t_go1))/0.0011 - (11*sin(0.0011*t_go1))/0.0011^2},
		// {(3*0.0011^2*t_go1^2 - 32*sin((0.0011*t_go1)/2)^2 + 5*0.0011*t_go1*sin(0.0011*t_go1))/0.0011^3, (38*sin(0.0011*t_go1) - 0.0011*(28*t_go1 + 10*t_go1*cos(0.0011*t_go1)))/0.0011^3 + (3*t_go1^3)/2,   (11*sin(0.0011*t_go1))/0.0011^2 - (6*t_go1 + 5*t_go1*cos(0.0011*t_go1))/0.0011, (56*sin((0.0011*t_go1)/2)^2 - 10*0.0011*t_go1*sin(0.0011*t_go1))/0.0011^2 - (9*t_go1^2)/2},
		// {-(16*sin((0.0011*t_go1)/2)^2 - 5*0.0011*t_go1*sin(0.0011*t_go1))/(2*0.0011^2),               (11*sin(0.0011*t_go1))/0.0011^2 - (6*t_go1 + 5*t_go1*cos(0.0011*t_go1))/0.0011,        (3*sin(0.0011*t_go1))/(2*0.0011) - (5*t_go1*cos(0.0011*t_go1))/2,                  (12*sin((0.0011*t_go1)/2)^2)/0.0011 - 5*t_go1*sin(0.0011*t_go1)},
		// {(6*t_go1 + 5*t_go1*cos(0.0011*t_go1))/0.0011 - (11*sin(0.0011*t_go1))/0.0011^2,    (9*t_go1^2)/2 - (56*sin((0.0011*t_go1)/2)^2 - 10*0.0011*t_go1*sin(0.0011*t_go1))/0.0011^2,         5*t_go1*sin(0.0011*t_go1) - (12*sin((0.0011*t_go1)/2)^2)/0.0011,                 (18*sin(0.0011*t_go1))/0.0011 - 10*t_go1*cos(0.0011*t_go1) - 9*t_go1]}	
	// };
	
	B_hat_inv[4][4]={
		{(4*0.0011^3*(18432*sin(0.0011*t_go1) - 9216*sin(2*0.0011*t_go1)) + 4*0.0011^3*t_go1^2*(15696*0.0011^2*sin(0.0011*t_go1) + 864*0.0011^2*sin(2*0.0011*t_go1)) - 4*0.0011^3*t_go1^3*(6768*0.0011^3*cos(0.0011*t_go1) - 2870*0.0011^3 + 54*0.0011^3*cos(2*0.0011*t_go1)) - 4*0.0011^3*t_go1^5*(300*0.0011^5 - 135*0.0011^5*cos(0.0011*t_go1)) + 4*0.0011^3*t_go1*(26368*0.0011*cos(0.0011*t_go1) - 31120*0.0011 + 4752*0.0011*cos(2*0.0011*t_go1)) - 6084*0.0011^7*t_go1^4*sin(0.0011*t_go1))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152), -(600*0.0011^7*t_go1^4 + 24*0.0011^3*(128*cos(2*0.0011*t_go1) - 512*cos(0.0011*t_go1) + 384) - 24*0.0011^3*t_go1*(96*0.0011*sin(0.0011*t_go1) - 48*0.0011*sin(2*0.0011*t_go1)) - 24*0.0011^3*t_go1^2*((311*0.0011^2)/2 - 160*0.0011^2*cos(0.0011*t_go1) + (9*0.0011^2*cos(2*0.0011*t_go1))/2) + 720*0.0011^6*t_go1^3*sin(0.0011*t_go1))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152), (4*0.0011^2*(3584*cos(2*0.0011*t_go1) - 14336*cos(0.0011*t_go1) + 10752) - 4*0.0011^2*t_go1*(4416*0.0011*sin(0.0011*t_go1) - 2208*0.0011*sin(2*0.0011*t_go1)) - 4*0.0011^2*t_go1^3*(24*0.0011^3*sin(0.0011*t_go1) + 36*0.0011^3*sin(2*0.0011*t_go1)) - 4*0.0011^2*t_go1^2*(1754*0.0011^2 - 2240*0.0011^2*cos(0.0011*t_go1) + 486*0.0011^2*cos(2*0.0011*t_go1)) + 4*0.0011^2*t_go1^4*(420*0.0011^4 + 240*0.0011^4*cos(0.0011*t_go1)) + 180*0.0011^7*t_go1^5*sin(0.0011*t_go1))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152), (4*0.0011^2*(11264*sin(0.0011*t_go1) - 5632*sin(2*0.0011*t_go1)) + 4*0.0011^2*t_go1^2*(8912*0.0011^2*sin(0.0011*t_go1) + 648*0.0011^2*sin(2*0.0011*t_go1)) - 4*0.0011^2*t_go1^3*(3792*0.0011^3*cos(0.0011*t_go1) - 1549*0.0011^3 + 45*0.0011^3*cos(2*0.0011*t_go1)) - 4*0.0011^2*t_go1^5*(150*0.0011^5 - 90*0.0011^5*cos(0.0011*t_go1)) + 4*0.0011^2*t_go1*(14336*0.0011*cos(0.0011*t_go1) - 17528*0.0011 + 3192*0.0011*cos(2*0.0011*t_go1)) - 3576*0.0011^6*t_go1^4*sin(0.0011*t_go1))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152)}
		{(600*0.0011^7*t_go1^4 + 24*0.0011^3*(128*cos(2*0.0011*t_go1) - 512*cos(0.0011*t_go1) + 384) - 24*0.0011^3*t_go1*(96*0.0011*sin(0.0011*t_go1) - 48*0.0011*sin(2*0.0011*t_go1)) - 24*0.0011^3*t_go1^2*((311*0.0011^2)/2 - 160*0.0011^2*cos(0.0011*t_go1) + (9*0.0011^2*cos(2*0.0011*t_go1))/2) + 720*0.0011^6*t_go1^3*sin(0.0011*t_go1))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152),                                                                                                             (200*0.0011^6*t_go1^3 + 8*0.0011^3*(48*sin(0.0011*t_go1) - 24*sin(2*0.0011*t_go1)) + 8*0.0011^3*t_go1*(80*0.0011*cos(0.0011*t_go1) - (169*0.0011)/2 + (9*0.0011*cos(2*0.0011*t_go1))/2))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152),                                                                                                                                          -(0.0011^2*(2816*sin(0.0011*t_go1) - 1408*sin(2*0.0011*t_go1)) + 8*0.0011^3*t_go1*(160*cos(0.0011*t_go1) + 81*cos(2*0.0011*t_go1) - 241) + 8*0.0011^5*t_go1^3*(30*cos(0.0011*t_go1) + 80) - 8*0.0011^4*t_go1^2*(62*sin(0.0011*t_go1) - 9*sin(2*0.0011*t_go1)))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152),                                                                                                            (300*0.0011^6*t_go1^4 + 0.0011^2*(2048*cos(2*0.0011*t_go1) - 8192*cos(0.0011*t_go1) + 6144) - 4*0.0011^2*t_go1*(432*0.0011*sin(0.0011*t_go1) - 216*0.0011*sin(2*0.0011*t_go1)) - 0.0011^2*t_go1^2*(2150*0.0011^2 - 2240*0.0011^2*cos(0.0011*t_go1) + 90*0.0011^2*cos(2*0.0011*t_go1)) + 480*0.0011^5*t_go1^3*sin(0.0011*t_go1))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152)}
	    { -(4*0.0011^2*(3584*cos(2*0.0011*t_go1) - 14336*cos(0.0011*t_go1) + 10752) - 4*0.0011^2*t_go1*(4416*0.0011*sin(0.0011*t_go1) - 2208*0.0011*sin(2*0.0011*t_go1)) - 4*0.0011^2*t_go1^3*(24*0.0011^3*sin(0.0011*t_go1) + 36*0.0011^3*sin(2*0.0011*t_go1)) - 4*0.0011^2*t_go1^2*(1754*0.0011^2 - 2240*0.0011^2*cos(0.0011*t_go1) + 486*0.0011^2*cos(2*0.0011*t_go1)) + 4*0.0011^2*t_go1^4*(420*0.0011^4 + 240*0.0011^4*cos(0.0011*t_go1)) + 180*0.0011^7*t_go1^5*sin(0.0011*t_go1))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152),                                            -(0.0011^2*(2816*sin(0.0011*t_go1) - 1408*sin(2*0.0011*t_go1)) + 8*0.0011^3*t_go1*(160*cos(0.0011*t_go1) + 81*cos(2*0.0011*t_go1) - 241) + 8*0.0011^5*t_go1^3*(30*cos(0.0011*t_go1) + 80) - 8*0.0011^4*t_go1^2*(62*sin(0.0011*t_go1) - 9*sin(2*0.0011*t_go1)))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152),                                 (4*0.0011*(2432*sin(0.0011*t_go1) - 1216*sin(2*0.0011*t_go1)) - 4*0.0011*t_go1*(548*0.0011 + 384*0.0011*cos(0.0011*t_go1) - 932*0.0011*cos(2*0.0011*t_go1)) + 60*0.0011^6*t_go1^5*cos(0.0011*t_go1) + 36*0.0011^5*t_go1^4*sin(0.0011*t_go1) - 4*0.0011*t_go1^2*(832*0.0011^2*sin(0.0011*t_go1) - 264*0.0011^2*sin(2*0.0011*t_go1)) + 4*0.0011*t_go1^3*(464*0.0011^3 + 320*0.0011^3*cos(0.0011*t_go1) - 24*0.0011^3*cos(2*0.0011*t_go1)))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152),                  -(4*0.0011*(2048*cos(2*0.0011*t_go1) - 8192*cos(0.0011*t_go1) + 6144) - 4*0.0011*t_go1*(2816*0.0011*sin(0.0011*t_go1) - 1408*0.0011*sin(2*0.0011*t_go1)) + 120*0.0011^6*t_go1^5*sin(0.0011*t_go1) + 4*0.0011*t_go1^3*(40*0.0011^3*sin(0.0011*t_go1) - 30*0.0011^3*sin(2*0.0011*t_go1)) - 4*0.0011*t_go1^2*(923*0.0011^2 - 1280*0.0011^2*cos(0.0011*t_go1) + 357*0.0011^2*cos(2*0.0011*t_go1)) + 4*0.0011*t_go1^4*(210*0.0011^4 + 120*0.0011^4*cos(0.0011*t_go1)))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152)}
		{(4*0.0011^2*(11264*sin(0.0011*t_go1) - 5632*sin(2*0.0011*t_go1)) + 4*0.0011^2*t_go1^2*(8912*0.0011^2*sin(0.0011*t_go1) + 648*0.0011^2*sin(2*0.0011*t_go1)) - 4*0.0011^2*t_go1^3*(3792*0.0011^3*cos(0.0011*t_go1) - 1549*0.0011^3 + 45*0.0011^3*cos(2*0.0011*t_go1)) - 4*0.0011^2*t_go1^5*(150*0.0011^5 - 90*0.0011^5*cos(0.0011*t_go1)) + 4*0.0011^2*t_go1*(14336*0.0011*cos(0.0011*t_go1) - 17528*0.0011 + 3192*0.0011*cos(2*0.0011*t_go1)) - 3576*0.0011^6*t_go1^4*sin(0.0011*t_go1))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152),        -(300*0.0011^6*t_go1^4 + 0.0011^2*(2048*cos(2*0.0011*t_go1) - 8192*cos(0.0011*t_go1) + 6144) - 4*0.0011^2*t_go1*(432*0.0011*sin(0.0011*t_go1) - 216*0.0011*sin(2*0.0011*t_go1)) - 0.0011^2*t_go1^2*(2150*0.0011^2 - 2240*0.0011^2*cos(0.0011*t_go1) + 90*0.0011^2*cos(2*0.0011*t_go1)) + 480*0.0011^5*t_go1^3*sin(0.0011*t_go1))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152),              (4*0.0011*(2048*cos(2*0.0011*t_go1) - 8192*cos(0.0011*t_go1) + 6144) - 4*0.0011*t_go1*(2816*0.0011*sin(0.0011*t_go1) - 1408*0.0011*sin(2*0.0011*t_go1)) + 120*0.0011^6*t_go1^5*sin(0.0011*t_go1) + 4*0.0011*t_go1^3*(40*0.0011^3*sin(0.0011*t_go1) - 30*0.0011^3*sin(2*0.0011*t_go1)) - 4*0.0011*t_go1^2*(923*0.0011^2 - 1280*0.0011^2*cos(0.0011*t_go1) + 357*0.0011^2*cos(2*0.0011*t_go1)) + 4*0.0011*t_go1^4*(210*0.0011^4 + 120*0.0011^4*cos(0.0011*t_go1)))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152),         (2*0.0011*(13312*sin(0.0011*t_go1) - 6656*sin(2*0.0011*t_go1)) + 2*0.0011*t_go1*(15360*0.0011*cos(0.0011*t_go1) - 19528*0.0011 + 4168*0.0011*cos(2*0.0011*t_go1)) - 2064*0.0011^5*t_go1^4*sin(0.0011*t_go1) + 2*0.0011*t_go1^2*(10144*0.0011^2*sin(0.0011*t_go1) + 960*0.0011^2*sin(2*0.0011*t_go1)) - 2*0.0011*t_go1^3*(4256*0.0011^3*cos(0.0011*t_go1) - 1627*0.0011^3 + 75*0.0011^3*cos(2*0.0011*t_go1)) - 2*0.0011*t_go1^5*(150*0.0011^5 - 120*0.0011^5*cos(0.0011*t_go1)))/(65536*cos(0.0011*t_go1) - 16384*cos(2*0.0011*t_go1) + 8336*0.0011^2*t_go1^2 + 1147*0.0011^4*t_go1^4 - 150*0.0011^6*t_go1^6 - 12800*0.0011^2*t_go1^2*cos(0.0011*t_go1) + 4464*0.0011^2*t_go1^2*cos(2*0.0011*t_go1) + 960*0.0011^4*t_go1^4*cos(0.0011*t_go1) - 27*0.0011^4*t_go1^4*cos(2*0.0011*t_go1) - 7104*0.0011^3*t_go1^3*sin(0.0011*t_go1) + 576*0.0011^3*t_go1^3*sin(2*0.0011*t_go1) + 29184*0.0011*t_go1*sin(0.0011*t_go1) - 14592*0.0011*t_go1*sin(2*0.0011*t_go1) - 49152)}
	}
    p_01 = (B_hat_inv[0][0]*zem1+B_hat_inv[0][1]*zem2+B_hat_inv[0][2]*zev1+B_hat_inv[0][3]*zev2);
	p_02 = (B_hat_inv[1][0]*zem1+B_hat_inv[1][1]*zem2+B_hat_inv[1][2]*zev1+B_hat_inv[1][3]*zev2);
	p_03 = (B_hat_inv[2][0]*zem1+B_hat_inv[2][1]*zem2+B_hat_inv[2][2]*zev1+B_hat_inv[2][3]*zev2);
	p_04 = (B_hat_inv[3][0]*zem1+B_hat_inv[3][1]*zem2+B_hat_inv[3][2]*zev1+B_hat_inv[3][3]*zev2);
	
    dydt[0] = y[2];
    dydt[1] = y[3];
    dydt[2] = -p_03+(6.0/(t_go1*t_go1))*zem1-(2.0/t_go1)*zev1;
    dydt[3] = -p_04+(6.0/(t_go1*t_go1))*zem2-(2.0/t_go1)*zev2;
    dydt[4] = sqrt(dydt[2]*dydt[2]+dydt[3]*dydt[3]);
    // add CWH terms
    dydt[2] = dydt[2] + 3.0*0.0011*0.0011*y[0] + 2.0*0.0011*y[3];
    dydt[3] = dydt[3] - 2.0*0.0011*y[2];
    // add penalty
    rr = y[0]*y[0] + y[1]*y[1];
    if (rr < dockLength*dockLength) {
        dydt[4] = dydt[4] + 10.0;
    }
}

//**********************************************************************

void ZEM_ZEV_prop(const state_type &y, state_type &dydt, const double t)
 {
    double t_go2 = tof - t;
    if (t_go2 < 1e-2) {
        t_go2 = 1e-2;
    }
    // double rr, r_p1, r_p2, v_p1, v_p2, zem1, zem2, zev1, zev2;
    // r_p1 = y[0] + t_go2*y[2]; 
    // r_p2 = y[1] + t_go2*y[3];
    // v_p1 = y[2]; 
    // v_p2 = y[3];
	
	double A_hat[4][4] = {
		{4-3*cos(0.0011*t_go2), 0, (1/0.0011)*sin(0.0011*t_go2), -(2/0.0011)*(cos(0.0011*t_go2)-1)},
		{6*sin(0.0011*t_go2)-6*0.0011*t_go2, 1, (2/0.0011)*(cos(0.0011*t_go2)-1), (4/0.0011)*sin(0.0011*t_go2)-3*t_go2},
		{3*0.0011*sin(0.0011*t_go2), 0, cos(0.0011*t_go2), 2*sin(0.0011*t_go2)},
		{6*0.0011*(cos(0.0011*t_go2)-1), 0, -2*sin(0.0011*t_go2), 4*cos(0.0011*t_go2)-3}
	};
    zem1 = r_target1-(A_hat[0][0]*y[0]+A_hat[0][1]*y[1]+A_hat[0][2]*y[2]+A_hat[0][3]*y[3]);
    zem2 = r_target2-(A_hat[1][0]*y[0]+A_hat[1][1]*y[1]+A_hat[1][2]*y[2]+A_hat[1][3]*y[3]);
    zev1 = v_target1-(A_hat[2][0]*y[0]+A_hat[2][1]*y[1]+A_hat[2][2]*y[2]+A_hat[2][3]*y[3]);
    zev2 = v_target2-(A_hat[3][0]*y[0]+A_hat[3][1]*y[1]+A_hat[3][2]*y[2]+A_hat[3][3]*y[3]);
    
	B_hat_inv[4][4]={
		{(4*0.0011^3*(18432*sin(0.0011*t_go2) - 9216*sin(2*0.0011*t_go2)) + 4*0.0011^3*t_go2^2*(15696*0.0011^2*sin(0.0011*t_go2) + 864*0.0011^2*sin(2*0.0011*t_go2)) - 4*0.0011^3*t_go2^3*(6768*0.0011^3*cos(0.0011*t_go2) - 2870*0.0011^3 + 54*0.0011^3*cos(2*0.0011*t_go2)) - 4*0.0011^3*t_go2^5*(300*0.0011^5 - 135*0.0011^5*cos(0.0011*t_go2)) + 4*0.0011^3*t_go2*(26368*0.0011*cos(0.0011*t_go2) - 31120*0.0011 + 4752*0.0011*cos(2*0.0011*t_go2)) - 6084*0.0011^7*t_go2^4*sin(0.0011*t_go2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152), -(600*0.0011^7*t_go2^4 + 24*0.0011^3*(128*cos(2*0.0011*t_go2) - 512*cos(0.0011*t_go2) + 384) - 24*0.0011^3*t_go2*(96*0.0011*sin(0.0011*t_go2) - 48*0.0011*sin(2*0.0011*t_go2)) - 24*0.0011^3*t_go2^2*((311*0.0011^2)/2 - 160*0.0011^2*cos(0.0011*t_go2) + (9*0.0011^2*cos(2*0.0011*t_go2))/2) + 720*0.0011^6*t_go2^3*sin(0.0011*t_go2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152), (4*0.0011^2*(3584*cos(2*0.0011*t_go2) - 14336*cos(0.0011*t_go2) + 10752) - 4*0.0011^2*t_go2*(4416*0.0011*sin(0.0011*t_go2) - 2208*0.0011*sin(2*0.0011*t_go2)) - 4*0.0011^2*t_go2^3*(24*0.0011^3*sin(0.0011*t_go2) + 36*0.0011^3*sin(2*0.0011*t_go2)) - 4*0.0011^2*t_go2^2*(1754*0.0011^2 - 2240*0.0011^2*cos(0.0011*t_go2) + 486*0.0011^2*cos(2*0.0011*t_go2)) + 4*0.0011^2*t_go2^4*(420*0.0011^4 + 240*0.0011^4*cos(0.0011*t_go2)) + 180*0.0011^7*t_go2^5*sin(0.0011*t_go2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152), (4*0.0011^2*(11264*sin(0.0011*t_go2) - 5632*sin(2*0.0011*t_go2)) + 4*0.0011^2*t_go2^2*(8912*0.0011^2*sin(0.0011*t_go2) + 648*0.0011^2*sin(2*0.0011*t_go2)) - 4*0.0011^2*t_go2^3*(3792*0.0011^3*cos(0.0011*t_go2) - 1549*0.0011^3 + 45*0.0011^3*cos(2*0.0011*t_go2)) - 4*0.0011^2*t_go2^5*(150*0.0011^5 - 90*0.0011^5*cos(0.0011*t_go2)) + 4*0.0011^2*t_go2*(14336*0.0011*cos(0.0011*t_go2) - 17528*0.0011 + 3192*0.0011*cos(2*0.0011*t_go2)) - 3576*0.0011^6*t_go2^4*sin(0.0011*t_go2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152)}
		{(600*0.0011^7*t_go2^4 + 24*0.0011^3*(128*cos(2*0.0011*t_go2) - 512*cos(0.0011*t_go2) + 384) - 24*0.0011^3*t_go2*(96*0.0011*sin(0.0011*t_go2) - 48*0.0011*sin(2*0.0011*t_go2)) - 24*0.0011^3*t_go2^2*((311*0.0011^2)/2 - 160*0.0011^2*cos(0.0011*t_go2) + (9*0.0011^2*cos(2*0.0011*t_go2))/2) + 720*0.0011^6*t_go2^3*sin(0.0011*t_go2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152),                                                                                                             (200*0.0011^6*t_go2^3 + 8*0.0011^3*(48*sin(0.0011*t_go2) - 24*sin(2*0.0011*t_go2)) + 8*0.0011^3*t_go2*(80*0.0011*cos(0.0011*t_go2) - (169*0.0011)/2 + (9*0.0011*cos(2*0.0011*t_go2))/2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152),                                                                                                                                          -(0.0011^2*(2816*sin(0.0011*t_go2) - 1408*sin(2*0.0011*t_go2)) + 8*0.0011^3*t_go2*(160*cos(0.0011*t_go2) + 81*cos(2*0.0011*t_go2) - 241) + 8*0.0011^5*t_go2^3*(30*cos(0.0011*t_go2) + 80) - 8*0.0011^4*t_go2^2*(62*sin(0.0011*t_go2) - 9*sin(2*0.0011*t_go2)))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152),                                                                                                            (300*0.0011^6*t_go2^4 + 0.0011^2*(2048*cos(2*0.0011*t_go2) - 8192*cos(0.0011*t_go2) + 6144) - 4*0.0011^2*t_go2*(432*0.0011*sin(0.0011*t_go2) - 216*0.0011*sin(2*0.0011*t_go2)) - 0.0011^2*t_go2^2*(2150*0.0011^2 - 2240*0.0011^2*cos(0.0011*t_go2) + 90*0.0011^2*cos(2*0.0011*t_go2)) + 480*0.0011^5*t_go2^3*sin(0.0011*t_go2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152)}
	    { -(4*0.0011^2*(3584*cos(2*0.0011*t_go2) - 14336*cos(0.0011*t_go2) + 10752) - 4*0.0011^2*t_go2*(4416*0.0011*sin(0.0011*t_go2) - 2208*0.0011*sin(2*0.0011*t_go2)) - 4*0.0011^2*t_go2^3*(24*0.0011^3*sin(0.0011*t_go2) + 36*0.0011^3*sin(2*0.0011*t_go2)) - 4*0.0011^2*t_go2^2*(1754*0.0011^2 - 2240*0.0011^2*cos(0.0011*t_go2) + 486*0.0011^2*cos(2*0.0011*t_go2)) + 4*0.0011^2*t_go2^4*(420*0.0011^4 + 240*0.0011^4*cos(0.0011*t_go2)) + 180*0.0011^7*t_go2^5*sin(0.0011*t_go2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152),                                            -(0.0011^2*(2816*sin(0.0011*t_go2) - 1408*sin(2*0.0011*t_go2)) + 8*0.0011^3*t_go2*(160*cos(0.0011*t_go2) + 81*cos(2*0.0011*t_go2) - 241) + 8*0.0011^5*t_go2^3*(30*cos(0.0011*t_go2) + 80) - 8*0.0011^4*t_go2^2*(62*sin(0.0011*t_go2) - 9*sin(2*0.0011*t_go2)))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152),                                 (4*0.0011*(2432*sin(0.0011*t_go2) - 1216*sin(2*0.0011*t_go2)) - 4*0.0011*t_go2*(548*0.0011 + 384*0.0011*cos(0.0011*t_go2) - 932*0.0011*cos(2*0.0011*t_go2)) + 60*0.0011^6*t_go2^5*cos(0.0011*t_go2) + 36*0.0011^5*t_go2^4*sin(0.0011*t_go2) - 4*0.0011*t_go2^2*(832*0.0011^2*sin(0.0011*t_go2) - 264*0.0011^2*sin(2*0.0011*t_go2)) + 4*0.0011*t_go2^3*(464*0.0011^3 + 320*0.0011^3*cos(0.0011*t_go2) - 24*0.0011^3*cos(2*0.0011*t_go2)))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152),                  -(4*0.0011*(2048*cos(2*0.0011*t_go2) - 8192*cos(0.0011*t_go2) + 6144) - 4*0.0011*t_go2*(2816*0.0011*sin(0.0011*t_go2) - 1408*0.0011*sin(2*0.0011*t_go2)) + 120*0.0011^6*t_go2^5*sin(0.0011*t_go2) + 4*0.0011*t_go2^3*(40*0.0011^3*sin(0.0011*t_go2) - 30*0.0011^3*sin(2*0.0011*t_go2)) - 4*0.0011*t_go2^2*(923*0.0011^2 - 1280*0.0011^2*cos(0.0011*t_go2) + 357*0.0011^2*cos(2*0.0011*t_go2)) + 4*0.0011*t_go2^4*(210*0.0011^4 + 120*0.0011^4*cos(0.0011*t_go2)))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152)}
		{(4*0.0011^2*(11264*sin(0.0011*t_go2) - 5632*sin(2*0.0011*t_go2)) + 4*0.0011^2*t_go2^2*(8912*0.0011^2*sin(0.0011*t_go2) + 648*0.0011^2*sin(2*0.0011*t_go2)) - 4*0.0011^2*t_go2^3*(3792*0.0011^3*cos(0.0011*t_go2) - 1549*0.0011^3 + 45*0.0011^3*cos(2*0.0011*t_go2)) - 4*0.0011^2*t_go2^5*(150*0.0011^5 - 90*0.0011^5*cos(0.0011*t_go2)) + 4*0.0011^2*t_go2*(14336*0.0011*cos(0.0011*t_go2) - 17528*0.0011 + 3192*0.0011*cos(2*0.0011*t_go2)) - 3576*0.0011^6*t_go2^4*sin(0.0011*t_go2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152),        -(300*0.0011^6*t_go2^4 + 0.0011^2*(2048*cos(2*0.0011*t_go2) - 8192*cos(0.0011*t_go2) + 6144) - 4*0.0011^2*t_go2*(432*0.0011*sin(0.0011*t_go2) - 216*0.0011*sin(2*0.0011*t_go2)) - 0.0011^2*t_go2^2*(2150*0.0011^2 - 2240*0.0011^2*cos(0.0011*t_go2) + 90*0.0011^2*cos(2*0.0011*t_go2)) + 480*0.0011^5*t_go2^3*sin(0.0011*t_go2))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152),              (4*0.0011*(2048*cos(2*0.0011*t_go2) - 8192*cos(0.0011*t_go2) + 6144) - 4*0.0011*t_go2*(2816*0.0011*sin(0.0011*t_go2) - 1408*0.0011*sin(2*0.0011*t_go2)) + 120*0.0011^6*t_go2^5*sin(0.0011*t_go2) + 4*0.0011*t_go2^3*(40*0.0011^3*sin(0.0011*t_go2) - 30*0.0011^3*sin(2*0.0011*t_go2)) - 4*0.0011*t_go2^2*(923*0.0011^2 - 1280*0.0011^2*cos(0.0011*t_go2) + 357*0.0011^2*cos(2*0.0011*t_go2)) + 4*0.0011*t_go2^4*(210*0.0011^4 + 120*0.0011^4*cos(0.0011*t_go2)))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152),         (2*0.0011*(13312*sin(0.0011*t_go2) - 6656*sin(2*0.0011*t_go2)) + 2*0.0011*t_go2*(15360*0.0011*cos(0.0011*t_go2) - 19528*0.0011 + 4168*0.0011*cos(2*0.0011*t_go2)) - 2064*0.0011^5*t_go2^4*sin(0.0011*t_go2) + 2*0.0011*t_go2^2*(10144*0.0011^2*sin(0.0011*t_go2) + 960*0.0011^2*sin(2*0.0011*t_go2)) - 2*0.0011*t_go2^3*(4256*0.0011^3*cos(0.0011*t_go2) - 1627*0.0011^3 + 75*0.0011^3*cos(2*0.0011*t_go2)) - 2*0.0011*t_go2^5*(150*0.0011^5 - 120*0.0011^5*cos(0.0011*t_go2)))/(65536*cos(0.0011*t_go2) - 16384*cos(2*0.0011*t_go2) + 8336*0.0011^2*t_go2^2 + 1147*0.0011^4*t_go2^4 - 150*0.0011^6*t_go2^6 - 12800*0.0011^2*t_go2^2*cos(0.0011*t_go2) + 4464*0.0011^2*t_go2^2*cos(2*0.0011*t_go2) + 960*0.0011^4*t_go2^4*cos(0.0011*t_go2) - 27*0.0011^4*t_go2^4*cos(2*0.0011*t_go2) - 7104*0.0011^3*t_go2^3*sin(0.0011*t_go2) + 576*0.0011^3*t_go2^3*sin(2*0.0011*t_go2) + 29184*0.0011*t_go2*sin(0.0011*t_go2) - 14592*0.0011*t_go2*sin(2*0.0011*t_go2) - 49152)}
	}
	p_01 = (B_hat_inv[0][0]*zem1+B_hat_inv[0][1]*zem2+B_hat_inv[0][2]*zev1+B_hat_inv[0][3]*zev2);
	p_02 = (B_hat_inv[1][0]*zem1+B_hat_inv[1][1]*zem2+B_hat_inv[1][2]*zev1+B_hat_inv[1][3]*zev2);
	p_03 = (B_hat_inv[2][0]*zem1+B_hat_inv[2][1]*zem2+B_hat_inv[2][2]*zev1+B_hat_inv[2][3]*zev2);
	p_04 = (B_hat_inv[3][0]*zem1+B_hat_inv[3][1]*zem2+B_hat_inv[3][2]*zev1+B_hat_inv[3][3]*zev2);
	
    dydt[0] = y[2];
    dydt[1] = y[3];
    dydt[2] = -p_03+(6.0/(t_go2*t_go2))*zem1-(2.0/t_go2)*zev1;
    dydt[3] = -p_04(6.0/(t_go2*t_go2))*zem2-(2.0/t_go2)*zev2;
    dydt[4] = sqrt(dydt[2]*dydt[2]+dydt[3]*dydt[3]);
    // add CWH terms
    dydt[2] = dydt[2] + 3.0*0.0011*0.0011*y[0] + 2.0*0.0011*y[3];
    dydt[3] = dydt[3] - 2.0*0.0011*y[2];
    // add penalty
    rr = y[0]*y[0] + y[1]*y[1];
    if (rr < dockLength*dockLength) {
        dydt[4] = dydt[4] + 10.0;
    }
}

//*********************************************************************

// this function can be called as the 6th argument of the integrate
// routine if we want to save state values w/ time
void write_traj( const state_type &x , const double t )
{
    cout << t << '\t' << x[0] << '\t' << x[1] << '\t' << x[2] \
        << '\t' << x[3] << '\t' << x[4] << endl;
}

//*****************************************************************************

double RotDockingCost(const waypoint &yw)
{

w_val[0] = yw[0];
w_val[1] = yw[1];
w_val[2] = yw[2];
w_val[3] = yw[3];

// Chaser Conditions
state_type y0 = {2.5, 1.3, 0, 0, 0}; // initial condition

//Time Propagation until waypoint
integrate( ZEM_ZEV_prop_waypoint, y0, 0.0, tof_waypoint, 0.01);

// Time Propagation until target
integrate( ZEM_ZEV_prop, y0, tof_waypoint, tof, 0.01);

return y0[4];
}

//********************************************************************************

int main(int argc, char *argv[]) {

int ierr = MPI_Init(&argc, &argv);

int p, rank;
ierr = MPI_Comm_size(MPI_COMM_WORLD, &p);
ierr = MPI_Comm_rank(MPI_COMM_WORLD, &rank);

const int n1 = 200;
const int n2 = 100;
const int n3 = 1000;

int work[p], startp[p];

int i, j, k, ii;

ii = n1-p*(n1/p);
startp[0] = 0;
for (i = 0; i < p; i++) {
    if (i < p - ii) {
	work[i] = n1/p;
    }
    else {
	work[i] = n1/p+1;
    }
 //   if (work[i] > ii) {
 //       ii = work[i];
 //   }
    if (i > 0) {
        startp[i] = startp[i-1]+work[i-1];
    }
    if (rank == 0) {
	cout << work[i] << '\t' << startp[i] << '\t'  << endl;
    }
}

size_t maxwork = work[p-1];
double J, minJ, minVx, minVy, rr;
waypoint w;

generator_type generator(time(0));

boost::uniform_real<> uni_dist(0,1);
boost::variate_generator<generator_type&, boost::uniform_real<> > rand(generator, uni_dist);

// offsets in variables
const double dx = 5.0/(n1-1);
const double dy = 2.6/(n2-1);

//ofstream outfile;
//outfile.open("output.txt");

// arrays to store output
std::vector<std::array<double, n2>>  Amin;
std::vector<std::array<std::array<double, 2>, n2>> Vmin;
Amin.resize(maxwork);
Vmin.resize(maxwork);

ofstream outfile;
if (rank == 0) {
    outfile.open("output_batch1.txt");
//    array<array<double, n2> n1> Aout;
  //  array<array<array<double, 2>, n2>, n1> Vout;
}

double JJ, rand1, rand2;

double* step;

for (i = 0; i < work[rank]; i++) {
    w = {0, 0, 0, 0};

    for (j = 0; j < n2; j++) {
        w[0] = -2.5 + (startp[rank]+i)*dx;
        w[1] = -1.3 + j*dy;
        minJ = 1e6;
	minVx = 1e6;
	minVy = 1e6;
        rr = w[0]*w[0] + w[1]*w[1];
	if (rr > dockLength*dockLength) {
	    for (k = 0; k < n3; k++) {
                rand1 = rand();
                rand2 = rand();

                w[2] = sqrt(rand1)*0.1*cos(rand2*2.0*pi);
                w[3] = sqrt(rand1)*0.1*sin(rand2*2.0*pi);
                JJ = RotDockingCost(w);
                
		if (JJ < minJ) {
                  minJ = JJ;
	          minVx = w[2];
	          minVy = w[3];
                }
            }
        }
        Amin[i][j] = minJ;
        Vmin[i][j][0] = minVx;
        Vmin[i][j][1] = minVy;     
   }
   if (rank == 0) {
   cout << i << endl;
   }
}



if (rank == 0) {
// output own work
for (i = 0; i < work[0]; i++) {
    for (j = 0; j < n2; j++) {
            outfile << i << '\t' << j << '\t' << Amin[i][j] << '\t' \
                << Vmin[i][j][0] << '\t' << Vmin[i][j][1] << endl;
    }  
}
}

// transmit or receive and output
MPI_Status status;
for (k = 1; k < p; k++) {
  if (rank == k) {
      ierr = MPI_Send(&Amin[0], work[k]*n2, MPI_DOUBLE, 0, 1, MPI_COMM_WORLD);
      ierr = MPI_Send(&Vmin[0], work[k]*n2*2, MPI_DOUBLE, 0, 2, MPI_COMM_WORLD);
  }
  if (rank == 0) {
      ierr = MPI_Recv(&Amin[0], work[k]*n2, MPI_DOUBLE, k, 1, MPI_COMM_WORLD,&status);
      ierr = MPI_Recv(&Vmin[0], work[k]*n2*2, MPI_DOUBLE, \
          k, 2, MPI_COMM_WORLD,&status);
      for (i = 0; i < work[k]; i++) {
          for (j = 0; j < n2; j++) {
              outfile << startp[k]+i << '\t' << j << '\t' << Amin[i][j] << '\t' \
                << Vmin[i][j][0] << '\t' << Vmin[i][j][1] << endl;
          }
      }
  }
}

if (rank == 0) {
outfile.close();
}

MPI_Finalize();

return 0;
}

